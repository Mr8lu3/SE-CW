doctype html
html(lang="en")
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title Admin User Management - Game Sharing Tips & Tricks
    // Add Three.js and Vanta.js scripts
    script(src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js")
    script(src="https://cdn.jsdelivr.net/npm/vanta@latest/dist/vanta.fog.min.js")
    style.
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        background-color: #010101; /* Black background */
        color: #FEFDFD; /* White text */
        min-height: 100vh; /* Ensure the body takes the full height of the viewport */
        overflow-x: hidden;
      }

      #vanta-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 0;
      }

      /* Header with title */
      .header {
        background-color: rgba(0, 0, 0, 0.5); /* More translucent black background */
        color: #FEFDFD; /* White text */
        padding: 25px 20px; /* Increased top/bottom padding */
        text-align: center;
        position: relative; 
        z-index: 100; /* Ensure the header stays above everything */
        backdrop-filter: blur(5px); /* Apply a blur effect for better text readability */
      }
      
      .header h1 {
        margin: 0;
        font-size: 2.5em;
        margin-bottom: 15px; /* Add space between header text and navbar */
        text-shadow: 0 0 5px rgba(0, 0, 0, 0.5); /* Text shadow for better visibility */
      }
      
      /* Navigation styling with improved visibility and translucency */
      .navbar-container {
        position: relative;
        width: 100%;
        z-index: 100; /* Very high z-index */
      }
      
      .navbar {
        display: flex;
        justify-content: center;
        background-color: rgba(58, 49, 83, 0.6); /* More translucent purple */
        width: 100%;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Shadow for depth */
        border-top: 1px solid rgba(255, 255, 255, 0.1); /* Subtle top border */
        border-bottom: 1px solid rgba(0, 0, 0, 0.2); /* Subtle bottom border */
        backdrop-filter: blur(5px); /* Apply a blur effect for better text readability */
      }
      
      .navbar a {
        color: #FEFDFD;
        padding: 15px 25px; /* Wider padding for easier clicking */
        text-decoration: none;
        font-weight: bold; /* Make text bolder */
        transition: all 0.3s ease;
        font-size: 1.1em; /* Slightly larger font */
        letter-spacing: 0.5px; /* Better readability */
        text-shadow: 0 0 4px rgba(0, 0, 0, 0.7); /* Text shadow for better visibility */
        position: relative; /* For the hover effect */
      }
      
      .navbar a:hover {
        background-color: rgba(95, 67, 178, 0.7); /* Translucent purple for hover effect */
        box-shadow: 0 0 15px rgba(95, 67, 178, 0.5); /* Glow effect on hover */
        transform: translateY(-2px); /* Slight lift effect */
      }
      
      .navbar a:active {
        transform: translateY(1px); /* Press effect */
      }

      /* Admin content */
      .admin-container {
        width: 90%;
        margin: 40px auto;
        padding: 30px;
        background-color: rgba(34, 34, 34, 0.7);
        border-radius: 10px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
        border: 1px solid rgba(95, 67, 178, 0.2);
        position: relative;
        z-index: 10;
        backdrop-filter: blur(5px);
      }

      .admin-container h2 {
        color: #8C6EFF;
        font-size: 28px;
        margin-top: 0;
        margin-bottom: 20px;
        text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
      }

      /* User table */
      .user-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: rgba(51, 51, 51, 0.5);
        border-radius: 10px;
        overflow: hidden;
      }

      .user-table th, .user-table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid rgba(95, 67, 178, 0.2);
      }

      .user-table th {
        background-color: rgba(58, 49, 83, 0.7);
        color: #FEFDFD;
        font-weight: bold;
        text-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
      }

      .user-table tr:hover {
        background-color: rgba(95, 67, 178, 0.2);
      }

      .user-table td {
        color: #FEFDFD;
      }

      .user-table .admin-row {
        background-color: rgba(95, 67, 178, 0.3);
      }

      /* Action buttons */
      .action-button {
        display: inline-block;
        padding: 8px 12px;
        margin-right: 5px;
        margin-bottom: 5px;
        background-color: #5F43B2;
        color: #FEFDFD;
        border: none;
        border-radius: 5px;
        font-size: 14px;
        font-weight: bold;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
      }

      .action-button:hover {
        background-color: #7555D4;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      }

      .action-button:active {
        transform: translateY(1px);
      }

      .delete-button {
        background-color: #d43655;
      }

      .delete-button:hover {
        background-color: #ff3b5d;
      }

      .admin-button {
        background-color: #43b28c;
      }

      .admin-button:hover {
        background-color: #55d4aa;
      }

      .remove-admin-button {
        background-color: #b28c43;
      }

      .remove-admin-button:hover {
        background-color: #d4aa55;
      }

      .back-button {
        display: inline-block;
        padding: 12px 20px;
        background-color: #3A3153;
        color: #FEFDFD;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        font-weight: bold;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
        margin-top: 30px;
      }

      .back-button:hover {
        background-color: #4A415F;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      }

      /* Message display */
      .message {
        padding: 15px;
        margin: 20px 0;
        border-radius: 5px;
        text-align: center;
        font-weight: bold;
      }
      
      .success {
        background-color: rgba(76, 175, 80, 0.2);
        color: #4CAF50;
        border: 1px solid rgba(76, 175, 80, 0.3);
      }
      
      .error {
        background-color: rgba(255, 107, 107, 0.2);
        color: #ff6b6b;
        border: 1px solid rgba(255, 107, 107, 0.3);
      }

      .footer {
        text-align: center;
        background-color: rgba(0, 0, 0, 0.5); /* More translucent footer */
        color: #FEFDFD;
        padding: 10px 0;
        position: fixed;
        width: 100%;
        bottom: 0;
        z-index: 10; /* Ensure the footer stays above the background */
        backdrop-filter: blur(5px); /* Apply a blur effect for better text readability */
      }

  body.dark-theme
    // Vanta background div
    #vanta-background

    // Header Section with navbar included
    .header
      h1 Admin User Management
      .navbar-container
        .navbar
          a(href='/') Home
          a(href='/Forum') Forum
          a(href='/userpage') User
          a(href='/Details_page') About Us
          a(href='/Guides') Guides
          a(href='/admin') Admin
          a(href='/logout') Logout

    // Admin User Management Container
    .admin-container
      h2 Manage Users
      #message-container
      
      table.user-table
        thead
          tr
            th ID
            th Username
            th Email
            th Role
            th Created
            th Actions
        tbody
          each user in users
            tr(class=user.is_admin ? 'admin-row' : '')
              td= user.user_id || user.id
              td= user.username
              td= user.email
              td= user.is_admin ? 'Admin' : 'User'
              td= user.created_at ? new Date(user.created_at).toLocaleDateString() : 'N/A'
              td
                if currentUser && (user.user_id != currentUser.user_id && user.id != currentUser.user_id)
                  if !user.is_admin
                    button.action-button.admin-button(onclick=`makeAdmin('${user.user_id || user.id}')`) Make Admin
                  else
                    button.action-button.remove-admin-button(onclick=`removeAdmin('${user.user_id || user.id}')`) Remove Admin
                  button.action-button.delete-button(onclick=`deleteUser('${user.user_id || user.id}')`) Delete
                else
                  span Current User

      a.back-button(href='/admin') Back to Dashboard

    // Footer
    .footer
      p &copy; 2025 Game Sharing Tips & Tricks. All rights reserved.

    // Initialize Vanta FOG effect and JavaScript functionality
    script.
      // Initialize Vanta fog effect
      VANTA.FOG({
        el: "#vanta-background",
        mouseControls: true,
        touchControls: true,
        gyroControls: false,
        minHeight: 200.00,
        minWidth: 200.00,
        highlightColor: 0x5F43B2,
        midtoneColor: 0x3A3153,
        lowlightColor: 0x010101,
        baseColor: 0x010101,
        blurFactor: 0.60,
        speed: 1.50,
        zoom: 0.80
      });
      
      // Function to show messages
      function showMessage(message, type = 'success') {
        const messageContainer = document.getElementById('message-container');
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${type}`;
        messageDiv.textContent = message;
        messageContainer.innerHTML = '';
        messageContainer.appendChild(messageDiv);
        
        // Auto-remove after 5 seconds
        setTimeout(() => {
          messageDiv.remove();
        }, 5000);
      }
      
      // Function to delete a user
      function deleteUser(userId) {
        if (!confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
          return;
        }
        
        fetch('/admin/users/delete', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ userId: userId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showMessage(data.message, 'success');
            // Remove the row from the table
            const row = document.querySelector(`tr td:first-child:contains('${userId}')`).parentNode;
            row.remove();
          } else {
            showMessage(data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          showMessage('An error occurred while deleting the user.', 'error');
        });
      }
      
      // Function to make a user an admin
      function makeAdmin(userId) {
        fetch('/admin/users/toggle-admin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ userId: userId, makeAdmin: 'true' })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showMessage(data.message, 'success');
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            showMessage(data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          showMessage('An error occurred while updating user status.', 'error');
        });
      }
      
      // Function to remove admin status
      function removeAdmin(userId) {
        fetch('/admin/users/toggle-admin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ userId: userId, makeAdmin: 'false' })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            showMessage(data.message, 'success');
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            showMessage(data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          showMessage('An error occurred while updating user status.', 'error');
        });
      }
      
      // Helper function for querySelector
      Document.prototype.querySelector = function(selector) {
        if (selector.includes(':contains')) {
          const parts = selector.split(':contains(');
          const baseSelector = parts[0];
          const textToMatch = parts[1].slice(0, -1).replace(/["']/g, '');
          
          const elements = this.querySelectorAll(baseSelector);
          for (let i = 0; i < elements.length; i++) {
            if (elements[i].textContent.includes(textToMatch)) {
              return elements[i];
            }
          }
          return null;
        }
        return Document.prototype.querySelector.call(this, selector);
      };